{"version":3,"sources":["component/map.js","component/weathercard.js","App.js","reportWebVitals.js","index.js"],"names":["Map","react_default","a","createElement","Fragment","className","src","width","height","style","border","allowFullScreen","loading","referrerPolicy","Weathercard","_ref","date","tempInfo","name","region","country","localtime","temp_c","last_updated","wind_kph","humidity","feelslike_c","icon","uv","text","getlocaltimedata","padTo2Digits","num","toString","padStart","Date","getDate","getMonth","getFullYear","join","alt","App","_useState","useState","_useState2","Object","slicedToArray","searchValue","setSearchValue","_useState3","_useState4","setTempInfo","getWeatherInfo","asyncToGenerator","_regeneratorRuntime","mark","_callee","url","res","data","_data$location","_data$current","_data$current$conditi","localtimedata","localtimeSlice","wrap","_context","prev","next","concat","fetch","sent","json","location","current","condition","substr","length","time","match","slice","t0","console","log","stop","apply","this","arguments","useEffect","map","type","id","placeholder","autoComplete","value","onChange","e","target","onClick","xmlns","x","y","viewBox","fill","d","weathercard","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7730b178.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Map = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card mx-auto w-full max-w-2xl mb-4 rounded-lg p-0 mt-4\">\r\n\t\t\t\t<iframe\r\n                    className=\"rounded-lg \"\r\n\t\t\t\t\tsrc=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d235013.7071856808!2d72.43965864944794!3d23.020497766159785!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x395e848aba5bd449%3A0x4fcedd11614f6516!2sAhmedabad%2C%20Gujarat!5e0!3m2!1sen!2sin!4v1655181554720!5m2!1sen!2sin\"\r\n\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\theight=\"350\"\r\n\t\t\t\t\tstyle={{border:0}}\r\n\t\t\t\t\tallowFullScreen=\"\"\r\n\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\treferrerPolicy=\"no-referrer-when-downgrade\"></iframe>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nconst Weathercard = ({ tempInfo }) => {\r\n\tconst { name, region, country, localtime, last_updated, temp_c, wind_kph, humidity, feelslike_c, uv, icon, text, getlocaltimedata, } = tempInfo;\r\n\t\r\n\t// const month = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\", ];\r\n\t// const weekday = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", ];\r\n\r\n\t// const d = new Date();\r\n\t// let localeTime = d.toLocaleTimeString([], {\r\n\t// \thour: \"2-digit\",\r\n\t// \tminute: \"2-digit\",\r\n\t// });\r\n\t// let monthName = month[d.getMonth()];\r\n\t// let date = d.getDate();\r\n\t// let year = d.getFullYear();\r\n\t// let day = weekday[d.getDay()];\r\n\t// let sec = sunrise;\r\n\t// let dates = new Date(sec * 1000);\r\n\t// let sunriseTime = dates.toLocaleTimeString([], {\r\n\t// \thour: \"2-digit\",\r\n\t// \tminute: \"2-digit\",\r\n\t// });\r\n\t// let sec2 = sunset;\r\n\t// let sec2dates = new Date(sec2 * 1000);\r\n\t// let sunsetTime = sec2dates.toLocaleTimeString([], {\r\n\t// \thour: \"2-digit\",\r\n\t// \tminute: \"2-digit\",\r\n\t// });\r\n\t// let weatherImgUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`\r\n\r\n\tfunction padTo2Digits(num) {\r\n\t\treturn num.toString().padStart(2, '0');\r\n\t  }\r\n\t  \r\n\t  function formatDate(date) {\r\n\t\treturn [\r\n\t\t  padTo2Digits(date.getDate()),\r\n\t\t  padTo2Digits(date.getMonth() + 1),\r\n\t\t  date.getFullYear(),\r\n\t\t].join(':');\r\n\t  }\r\n\t  \r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card mx-auto w-full max-w-2xl mb-4 rounded-lg p-10\">\r\n\t\t\t\t<div className=\"card__info\">\r\n\t\t\t\t\t<p className=\"card__info__place\">\r\n\t\t\t\t\t\t{name}, <span className=\"text-pink-600 font-bold\">{region},{country}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p className=\"card__info__time\">{getlocaltimedata}</p>\r\n\t\t\t\t\t<p className=\"card__info__date\">\r\n\t\t\t\t\t{formatDate(new Date(localtime))}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card__weather\">\r\n\t\t\t\t\t{/* <i className=\"wi wi-night-sleet text-indigo-700\"></i> */}\r\n\t\t\t\t\t<img src={icon} alt=\"icon\" />\r\n\t\t\t\t\t<p className=\"card__weather__temp\">{temp_c}<sup>Â°</sup>C</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"flex flex-wrap mx-auto mb-10 w-full max-w-2xl\">\r\n\t\t\t\t{/* <div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-sunrise text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tSunrise time : <span className=\"font-bold\">{sunriseTime}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-sunset text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tSunset time : <span className=\"font-bold\">{sunsetTime}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-night-sleet text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tWeathermood : <span className=\"font-bold\">{text}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-night-sleet wi wi-windy text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tWind speed : <span className=\"font-bold\">{wind_kph} K/ph</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-humidity text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tHumidity : <span className=\"font-bold\">{humidity}%</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-cloud-refresh text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\ttemperature feels :{\" \"}\r\n\t\t\t\t\t\t\t<span className=\"font-bold\">{feelslike_c}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-day-light-wind text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tMin temperature : <span className=\"font-bold\">{temp_min}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"p-2 sm:w-1/2 w-full\">\r\n\t\t\t\t\t<div className=\"bg-gray-100 rounded flex p-4 h-full items-center\">\r\n\t\t\t\t\t\t<i className=\"wi wi-day-cloudy-high text-indigo-700 mr-3\"></i>\r\n\t\t\t\t\t\t<span className=\"title-font font-medium\">\r\n\t\t\t\t\t\t\tMax temperature : <span className=\"font-bold\">{temp_max}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Weathercard;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport Map from \"./component/map\";\nimport Weathercard from \"./component/weathercard\";\n\nfunction App() {\n\tconst [searchValue, setSearchValue] = useState(\"ahmedabad\");\n\tconst [tempInfo, setTempInfo] = useState(\"\");\n\tconst getWeatherInfo = async () => {\n\t\ttry {\n\t\t\t// let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=cfe5fbf9f63f5bb13c544b436ab0e641`;\n\t\t\tlet url = `https://api.weatherapi.com/v1/current.json?key=9083e95bcb8d49ddb4a50057221406&q=${searchValue}&aqi=yes`;\n\t\t\tconst res = await fetch(url);\n\t\t\tconst data = await res.json();\n\n\t\t\t// const { temp, humidity, temp_min, temp_max, feels_like } = data.main;\n\t\t\t// const { main: weathermood, description, icon } = data.weather[0];\n\t\t\t// const { country, sunrise, sunset } = data.sys;\n\t\t\t// const { name, timezone } = data;\n\t\t\t// const { speed } = data.wind;\n\n\t\t\tconst { name, region, country, localtime } = data.location;\n\t\t\tconst { last_updated, temp_c, wind_kph, humidity, feelslike_c, uv } =\n\t\t\t\tdata.current;\n\t\t\tconst { text, icon } = data.current.condition;\n\n\t\t\tconst localtimedata = localtime;\n\t\t\tconst localtimeSlice = localtimedata.substr(localtimedata.length - 5);\n\t\t\tconst tConvert = (time)=>{\n\t\t\t\t// Check correct time format and split into components\n\t\t\t\ttime = time\n\t\t\t\t.toString()\n\t\t\t\t.match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n\t\t\t\tif (time.length > 1) {\n\t\t\t\t// If time format correct\n\t\t\t\ttime = time.slice(1); // Remove full string match value\n\t\t\t\ttime[5] = +time[0] < 12 ? \" AM\" : \" PM\"; // Set AM/PM\n\t\t\t\ttime[0] = +time[0] % 12 || 12; // Adjust hours\n\t\t\t\t}\n\t\t\t\treturn time.join(\"\"); // return adjusted time or original string\n\t\t\t}\n\t\t\tconst getlocaltimedata = tConvert(localtimeSlice);\n\t\t\t\n\t\t\t\n\n\t\t\t// const myNewWeatherInfo = { temp, humidity, temp_min, temp_max, country, sunrise, sunset, name, timezone, weathermood, speed, description, feels_like, icon };\n\t\t\tconst myNewWeatherInfo = { name, region, country, localtime, last_updated, temp_c, wind_kph, humidity, feelslike_c, uv, icon, text, localtimeSlice, getlocaltimedata, };\n\t\t\tsetTempInfo(myNewWeatherInfo);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\tuseEffect(() => {\n\t\tgetWeatherInfo();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Map />\n\t\t\t<div className=\"mb-6 flex mt-4\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"search\"\n\t\t\t\t\tid=\"search\"\n\t\t\t\t\tname=\"search\"\n\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\tvalue={searchValue}\n\t\t\t\t\tclassName=\"w-full bg-white rounded border border-gray-300 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out rounded-lg rounded-tr-none rounded-br-none capitalize\"\n\t\t\t\t\tonChange={(e) => setSearchValue(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"flex mx-auto text-white bg-indigo-500 border-0 items-center justify-center py-2 px-2 focus:outline-none hover:bg-indigo-600 rounded text-lg rounded-none w-16 rounded-lg rounded-tl-none rounded-bl-none\"\n\t\t\t\t\tonClick={getWeatherInfo}>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tx=\"0px\"\n\t\t\t\t\t\ty=\"0px\"\n\t\t\t\t\t\twidth=\"30\"\n\t\t\t\t\t\theight=\"30\"\n\t\t\t\t\t\tviewBox=\"0 0 30 30\"\n\t\t\t\t\t\tfill=\"#fff\">\n\t\t\t\t\t\t<path d=\"M 13 3 C 7.4889971 3 3 7.4889971 3 13 C 3 18.511003 7.4889971 23 13 23 C 15.396508 23 17.597385 22.148986 19.322266 20.736328 L 25.292969 26.707031 A 1.0001 1.0001 0 1 0 26.707031 25.292969 L 20.736328 19.322266 C 22.148986 17.597385 23 15.396508 23 13 C 23 7.4889971 18.511003 3 13 3 z M 13 5 C 17.430123 5 21 8.5698774 21 13 C 21 17.430123 17.430123 21 13 21 C 8.5698774 21 5 17.430123 5 13 C 5 8.5698774 8.5698774 5 13 5 z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Weathercard tempInfo={tempInfo} />\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}